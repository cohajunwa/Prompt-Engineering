You can create the `/greet/<username>` endpoint in your Flask application to return a JSON greeting by using the `jsonify` function. Hereâ€™s how you can implement it:

```python
from flask import Flask, jsonify 

app = Flask(__name__) 

@app.route("/") 
def hello_world(): 
    return "<p>Hello, World!</p>"

@app.route('/health') 
def health(): 
    return 'loadserver is healthy\n', 200

@app.route('/greet/<username>') 
def greet(username): 
    # Return a JSON greeting
    return jsonify({"greeting": f"Hello, {username}!"})

if __name__ == '__main__':
    app.run(debug=True)
```

### Explanation:
- The `@app.route('/greet/<username>')` decorator creates a route that captures the `<username>` part of the URL.
- The `greet` function takes `username` as a parameter and returns a JSON response containing a greeting message.
- The `jsonify` function is used to convert the Python dictionary to a JSON response.

### Example Usage:
If you run this Flask application and navigate to `http://127.0.0.1:5000/greet/Alice`, you will receive a JSON response like this:

```json
{
    "greeting": "Hello, Alice!"
}
```