To create a `/greet/` endpoint that returns a JSON greeting in a Flask application, you can follow these steps. The endpoint will accept a `username` as a parameter and return a JSON response with a greeting message.

Here's the complete code:

```python
from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/greet/<username>')
def greet(username):
    # Create a greeting message
    greeting_message = f"Hello, {username}!"
    # Return the greeting message as a JSON response
    return jsonify(message=greeting_message)

if __name__ == '__main__':
    app.run(debug=True)
```

### Explanation:
1. **Import Flask and jsonify**: Import the necessary modules from Flask.
2. **Create a Flask Application**: Initialize the Flask app.
3. **Define the `/greet/<username>` Route**: Create a route that accepts a `username` parameter.
4. **Create a Greeting Message**: Construct a greeting message using the provided `username`.
5. **Return JSON Response**: Use `jsonify` to create a JSON response containing the greeting message.
6. **Run the Application**: If the script is run directly, start the Flask development server.

### Running the Application:
1. Save the code to a file, e.g., `app.py`.
2. Run the Flask application using the command:
   ```sh
   python app.py
   ```
3. Open a web browser or use a tool like `curl` or Postman to access the endpoint:
   ```
   http://127.0.0.1:5000/greet/John
   ```
   You should receive a JSON response like:
   ```json
   {
     "message": "Hello, John!"
   }
   ```

This will set up a simple Flask web service that greets users by their name.